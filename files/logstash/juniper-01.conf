input {
  udp {
    port => "5514"
    type => "syslog"
  }

  tcp {
    port => "5514"
    type => "syslog"
  }
}

filter {
    if [type] == "syslog" {
        if [message] =~ "last message repeated" {
            grok {
                match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} %{DATA:hostname} %{GREEDYDATA:msg-repeated}" ]
            }

        } else {
            grok {
                match => [ "message", "%{POSINT:syslog_pri} %{TIMESTAMP_ISO8601:timestamp} %{DATA:hostname} %{DATA:daemon} %{DATA:pid} %{DATA:message_type} %{GREEDYDATA:router_message}" ]
            }
        }
        ###### IS-IS DOWN
        if [message_type] =~ "^RPD_ISIS_ADJDOWN" {
                mutate { add_tag => [ "isis_down" ] }

        ###### IS-IS UP
        } elseif [message_type] =~ "^RPD_ISIS_ADJUP" {
                mutate { add_tag => [ "isis_up" ] }

        ###### BGP DOWN
        } elseif [message_type] =~ "^BGP_IO_ERROR_CLOSE_SESSION" {
                mutate { add_tag => [ "bgp_down" ] }
        }
    }
}

output {
    if "_grokparsefailure" in [tags] {
        file {
            path => "/tmp/fail-%{type}-%{+YYYY.MM.dd}.log"
        }
    }

    if "isis_down" in [tags] {
        kafka {
            codec => json
            topic_id => "isis_down"
        }
    } elseif "isis_up" in [tags] {
        kafka {
            codec => json
            topic_id => "isis_up"
        }
    } elseif "bgp_down" in [tags] {
        kafka {
            codec => json
            topic_id => "bgp_down"
        }
    } else {
        kafka {
            codec => json
            topic_id => "juniper"
        }
    }

    # The message was parsed correctly, and should be sent to elasicsearch.
    #elasticsearch {
    #    hosts           => ["http://10.255.90.102:9200"]
    #    index           => "juniper-%{+YYYY.MM.dd}"
    #}

}
